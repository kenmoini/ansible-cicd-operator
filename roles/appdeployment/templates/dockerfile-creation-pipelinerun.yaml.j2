{% if _cicd_kemo_dev_appdeployment_spec.registry.imageName is defined %}
{% set imageName = _cicd_kemo_dev_appdeployment_spec.registry.imageName %}
{% else %}
{% set imageName = ansible_operator_meta.name %}
{% endif %}

{% if image_registry_secret_info.resources[0].data['.dockerconfigjson'] is defined %}
{% set repoTargetJSON = image_registry_secret_info.resources[0].data['.dockerconfigjson'] | b64decode %}
{% endif %}
{% if image_registry_secret_info.resources[0].data['.dockercfg'] is defined %}
{% set repoTargetJSON = image_registry_secret_info.resources[0].data['.dockercfg'] | b64decode %}
{% endif %}
{% set repoTarget = lookup('ansible.builtin.dict', (repoTargetJSON | from_json).auths).key %}

{% if _cicd_kemo_dev_appdeployment_spec.sourceRepository.branch is defined %}
{% set sourceBranch = _cicd_kemo_dev_appdeployment_spec.sourceRepository.branch %}
{% else %}
{% set sourceBranch = source_gitrepo_info.resources.spec.branch %}
{% endif %}

---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    chains.tekton.dev/signed: 'true'
    pipeline.openshift.io/started-by: appDeployment-{{ ansible_operator_meta.name }}
  generateName: {{ ansible_operator_meta.name }}-
  namespace: {{ ansible_operator_meta.namespace }}
  finalizers:
    - chains.tekton.dev/pipelinerun
  labels:
    app.kubernetes.io/instance: {{ ansible_operator_meta.name }}
    app.kubernetes.io/name: {{ ansible_operator_meta.name }}
    pipeline.openshift.io/strategy: docker
    pipeline.openshift.io/type: kubernetes
    pipeline.openshift.io/git-ranch: {{ sourceBranch }}
    tekton.dev/pipeline: {{ ansible_operator_meta.name }}
spec:
  params:
    - name: APP_NAME
      value: {{ ansible_operator_meta.name }}
    - name: GIT_REPO
      value: '{{ source_gitrepo_info.resources[0].spec.url }}'
    - name: GIT_REVISION
      value: '{{ sourceBranch }}'
    - name: IMAGE_NAME
      value: '{{ repoTarget }}/{{ _cicd_kemo_dev_appdeployment_spec.registry.path }}/{{ imageName }}'
    - name: IMAGE_TAG
      value: latest
    - name: MULTI_IMAGE_TAG
      value: "true"
    - name: PATH_CONTEXT
      value: {{ _cicd_kemo_dev_appdeployment_spec.sourceRepository.contextDir }}
    - name: DOCKERFILE
      value: {{ _cicd_kemo_dev_appdeployment_spec.build.dockerfile }}
  pipelineRef:
    name: {{ ansible_operator_meta.name }}
  taskRunTemplate:
    serviceAccountName: pipeline
  timeouts:
    pipeline: 1h0m0s
  workspaces:
    - name: dockerconfig
      secret:
        secretName: {{ image_registry_info.resources[0].spec.credentials.name }}
    - name: manifests
      configmap:
        name: {{ ansible_operator_meta.name }}-manifests
    - name: workspace
      volumeClaimTemplate:
        metadata:
          creationTimestamp: null
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
          volumeMode: Filesystem
        status: {}